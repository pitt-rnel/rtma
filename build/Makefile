#############################################################################
# Makefile for building: RTMADirs
# Generated by qmake (1.07a) (Qt 3.3.8b) on: Wed Apr 27 14:12:13 2011
# Project:  RTMADirs.pro
# Template: subdirs
# Command: $(QMAKE) -o Makefile RTMADirs.pro
#############################################################################

MAKEFILE =	Makefile
QMAKE    =	qmake
DEL_FILE =    rm -f
CHK_DIR_EXISTS= test -d
MKDIR    = mkdir -p
INSTALL_FILE= 
INSTALL_DIR = 
SUBTARGETS =	 \
		sub-make_obj_dirs \
		sub-__-src-core \
		sub-__-src-modules \
		sub-__-lang-python

first: all

all: Makefile $(SUBTARGETS)

make_obj_dirs/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "make_obj_dirs" || $(MKDIR) "make_obj_dirs"
	cd make_obj_dirs && $(QMAKE) make_obj_dirs.pro -o $(MAKEFILE)
sub-make_obj_dirs: make_obj_dirs/$(MAKEFILE) FORCE
	cd make_obj_dirs && $(MAKE) -f $(MAKEFILE)

../src/core/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "../src/core" || $(MKDIR) "../src/core"
	cd ../src/core && $(QMAKE) core.pro -o $(MAKEFILE)
sub-__-src-core: ../src/core/$(MAKEFILE) FORCE
	cd ../src/core && $(MAKE) -f $(MAKEFILE)

../src/modules/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "../src/modules" || $(MKDIR) "../src/modules"
	cd ../src/modules && $(QMAKE) modules.pro -o $(MAKEFILE)
sub-__-src-modules: ../src/modules/$(MAKEFILE) FORCE
	cd ../src/modules && $(MAKE) -f $(MAKEFILE)

../lang/python/$(MAKEFILE): 
	@$(CHK_DIR_EXISTS) "../lang/python" || $(MKDIR) "../lang/python"
	cd ../lang/python && $(QMAKE) python.pro -o $(MAKEFILE)
sub-__-lang-python: ../lang/python/$(MAKEFILE) FORCE
	cd ../lang/python && $(MAKE) -f $(MAKEFILE)

Makefile: RTMADirs.pro  /usr/share/qt3/mkspecs/default/qmake.conf 
	$(QMAKE) -o Makefile RTMADirs.pro
qmake: qmake_all
	@$(QMAKE) -o Makefile RTMADirs.pro

all: $(SUBTARGETS)
qmake_all: make_obj_dirs/$(MAKEFILE) ../src/core/$(MAKEFILE) ../src/modules/$(MAKEFILE) ../lang/python/$(MAKEFILE)
	 ( [ -d make_obj_dirs ] && cd make_obj_dirs ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d ../src/core ] && cd ../src/core ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d ../src/modules ] && cd ../src/modules ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
	 ( [ -d ../lang/python ] && cd ../lang/python ; grep "^qmake_all:" $(MAKEFILE) && $(MAKE) -f $(MAKEFILE) qmake_all; ) || true
clean uicables mocables uiclean mocclean lexclean yaccclean : qmake_all FORCE
	 ( [ -d make_obj_dirs ] && cd make_obj_dirs ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d ../src/core ] && cd ../src/core ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d ../src/modules ] && cd ../src/modules ; $(MAKE) -f $(MAKEFILE) $@; ) || true
	 ( [ -d ../lang/python ] && cd ../lang/python ; $(MAKE) -f $(MAKEFILE) $@; ) || true
uninstall_subdirs: qmake_all FORCE
	 ( [ -d make_obj_dirs ] && cd make_obj_dirs ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d ../src/core ] && cd ../src/core ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d ../src/modules ] && cd ../src/modules ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
	 ( [ -d ../lang/python ] && cd ../lang/python ; $(MAKE) -f $(MAKEFILE) uninstall; ) || true
install_subdirs: qmake_all FORCE
	 ( [ -d make_obj_dirs ] && cd make_obj_dirs ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d ../src/core ] && cd ../src/core ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d ../src/modules ] && cd ../src/modules ; $(MAKE) -f $(MAKEFILE) install; ) || true
	 ( [ -d ../lang/python ] && cd ../lang/python ; $(MAKE) -f $(MAKEFILE) install; ) || true
distclean: qmake_all FORCE
	 ( [ -d make_obj_dirs ] && cd make_obj_dirs ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d ../src/core ] && cd ../src/core ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d ../src/modules ] && cd ../src/modules ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true
	 ( [ -d ../lang/python ] && cd ../lang/python ; $(MAKE) -f $(MAKEFILE) $@; $(DEL_FILE) $(MAKEFILE); ) || true

install:  install_subdirs

uninstall:  uninstall_subdirs

FORCE:

